{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import alive from\"../images/alive.svg\";import dead from\"../images/dead.svg\";import question from\"../images/question.svg\";var CharacterDetail=function CharacterDetail(props){var icon='';var getIcon=function getIcon(){if(props.character.status==='Alive'){return icon=alive;}else if(props.character.status==='Dead'){return icon=dead;}else{return icon=question;}};getIcon(props);return/*#__PURE__*/React.createElement(\"div\",{className:\"article__box\"},/*#__PURE__*/React.createElement(Link,{className:\"article__link\",to:\"/\"},\"< Volver\"),/*#__PURE__*/React.createElement(\"article\",{className:\"article\",key:props.character.id},/*#__PURE__*/React.createElement(\"img\",{className:\"article__img\",src:props.character.image,alt:props.character.name,title:\"picture of \".concat(props.character.name)}),/*#__PURE__*/React.createElement(\"div\",{className:\"article__text\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"article__name\"},props.character.name),/*#__PURE__*/React.createElement(\"p\",{className:\"article__attribute\"},/*#__PURE__*/React.createElement(\"span\",{className:\"article__attribute__title\"},\"Status:\"),\" \",props.character.status,\" \",/*#__PURE__*/React.createElement(\"img\",{className:\"article__attribute__icon\",src:icon,alt:\"status\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"article__attribute\"},/*#__PURE__*/React.createElement(\"span\",{className:\"article__attribute__title\"},\"Species:\"),\" \",props.character.specie),/*#__PURE__*/React.createElement(\"p\",{className:\"article__attribute\"},/*#__PURE__*/React.createElement(\"span\",{className:\"article__attribute__title\"},\"Origin:\"),\" \",props.character.origin),/*#__PURE__*/React.createElement(\"p\",{className:\"article__attribute\"},/*#__PURE__*/React.createElement(\"span\",{className:\"article__attribute__title\"},\"Episodes:\"),\" \",props.character.episodes))));};export default CharacterDetail;","map":{"version":3,"sources":["/home/marina/Escritorio/modulo-3-evaluacion-final-MarinaCouso/src/components/CharacterDetail.js"],"names":["React","Link","CharacterDetail","props","icon","getIcon","character","status","alive","dead","question","id","image","name","specie","origin","episodes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,C,yHAMA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAIF,KAAK,CAACG,SAAN,CAAgBC,MAAhB,GAA2B,OAA/B,CAAwC,CACtC,MAAQH,CAAAA,IAAI,CAAGI,KAAf,CACD,CAFD,IAEO,IAAIL,KAAK,CAACG,SAAN,CAAgBC,MAAhB,GAA2B,MAA/B,CAAuC,CAC5C,MAAQH,CAAAA,IAAI,CAAGK,IAAf,CACD,CAFM,IAEA,CACL,MAAQL,CAAAA,IAAI,CAAGM,QAAf,CACD,CACF,CARD,CASAL,OAAO,CAACF,KAAD,CAAP,CAEA,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,eAAhB,CAAgC,EAAE,IAAlC,aADF,cAIE,+BAAS,SAAS,CAAC,SAAnB,CAA6B,GAAG,CAAEA,KAAK,CAACG,SAAN,CAAgBK,EAAlD,eACE,2BAAK,SAAS,CAAC,cAAf,CAA8B,GAAG,CAAER,KAAK,CAACG,SAAN,CAAgBM,KAAnD,CAA0D,GAAG,CAAET,KAAK,CAACG,SAAN,CAAgBO,IAA/E,CAAqF,KAAK,sBAAgBV,KAAK,CAACG,SAAN,CAAgBO,IAAhC,CAA1F,EADF,cAEE,2BAAK,SAAS,CAAC,eAAf,eACE,0BAAI,SAAS,CAAC,eAAd,EAA+BV,KAAK,CAACG,SAAN,CAAgBO,IAA/C,CADF,cAEE,yBAAG,SAAS,CAAC,oBAAb,eACE,4BAAM,SAAS,CAAC,2BAAhB,YADF,KAC8DV,KAAK,CAACG,SAAN,CAAgBC,MAD9E,kBACsF,2BAAK,SAAS,CAAC,0BAAf,CAA0C,GAAG,CAAEH,IAA/C,CAAqD,GAAG,CAAC,QAAzD,EADtF,CAFF,cAKE,yBAAG,SAAS,CAAC,oBAAb,eACE,4BAAM,SAAS,CAAC,2BAAhB,aADF,KAC+DD,KAAK,CAACG,SAAN,CAAgBQ,MAD/E,CALF,cAQE,yBAAG,SAAS,CAAC,oBAAb,eACE,4BAAM,SAAS,CAAC,2BAAhB,YADF,KAC8DX,KAAK,CAACG,SAAN,CAAgBS,MAD9E,CARF,cAWE,yBAAG,SAAS,CAAC,oBAAb,eACE,4BAAM,SAAS,CAAC,2BAAhB,cADF,KACgEZ,KAAK,CAACG,SAAN,CAAgBU,QADhF,CAXF,CAFF,CAJF,CADF,CAyBD,CAtCD,CAgDA,cAAed,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport alive from '../images/alive.svg';\nimport dead from '../images/dead.svg';\nimport question from '../images/question.svg';\nconst CharacterDetail = (props) => {\n  let icon = '';\n  const getIcon = () => {\n    if (props.character.status === 'Alive') {\n      return (icon = alive);\n    } else if (props.character.status === 'Dead') {\n      return (icon = dead);\n    } else {\n      return (icon = question);\n    }\n  };\n  getIcon(props);\n\n  return (\n    <div className='article__box'>\n      <Link className='article__link' to={`/`}>\n        &lt; Volver\n      </Link>\n      <article className='article' key={props.character.id}>\n        <img className='article__img' src={props.character.image} alt={props.character.name} title={`picture of ${props.character.name}`}></img>\n        <div className='article__text'>\n          <h2 className='article__name'>{props.character.name}</h2>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Status:</span> {props.character.status} <img className='article__attribute__icon' src={icon} alt='status'></img>\n          </p>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Species:</span> {props.character.specie}\n          </p>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Origin:</span> {props.character.origin}\n          </p>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Episodes:</span> {props.character.episodes}\n          </p>\n        </div>\n      </article>\n    </div>\n  );\n};\nCharacterDetail.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  status: PropTypes.string,\n  specie: PropTypes.string,\n  origin: PropTypes.string,\n  episodes: PropTypes.number,\n};\nexport default CharacterDetail;\n"]},"metadata":{},"sourceType":"module"}