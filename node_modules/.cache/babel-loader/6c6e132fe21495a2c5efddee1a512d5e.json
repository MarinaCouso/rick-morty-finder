{"ast":null,"code":"import _slicedToArray from\"/home/marina/Escritorio/modulo-3-evaluacion-final-MarinaCouso/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import getDataFromApi from'./service/Api';import{useState,useEffect}from'react';import logo from'./images/logo.png';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];useEffect(function(){getDataFromApi().then(function(data){setItems(data);});},[]);var handleChange=function handleChange(ev){ev.preventDefault();setSearch(ev.target.value);};var filteredItems=items.filter(function(i){return i.name.toUpperCase().includes(search.toUpperCase());});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"logo\",src:logo,alt:\"logo\",title:\"Logo de Rick y Morty\"})),/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"search\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"search\",onChange:handleChange})),/*#__PURE__*/React.createElement(\"ul\",{className:\"list\"},filteredItems.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{className:\"item\",key:item.id},/*#__PURE__*/React.createElement(\"img\",{className:\"item__img\",src:item.image,alt:item.name,title:\"picture of \".concat(item.name)}),/*#__PURE__*/React.createElement(\"div\",{className:\"item__text\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"item__name\"},item.name),/*#__PURE__*/React.createElement(\"p\",{className:\"item__attribute\"},item.specie)));}))));};export default App;","map":{"version":3,"sources":["/home/marina/Escritorio/modulo-3-evaluacion-final-MarinaCouso/src/App.js"],"names":["React","getDataFromApi","useState","useEffect","logo","App","items","setItems","search","setSearch","then","data","handleChange","ev","preventDefault","target","value","filteredItems","filter","i","name","toUpperCase","includes","map","item","id","image","specie"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,eAA3B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACQH,QAAQ,CAAC,EAAD,CADhB,wCACXI,KADW,eACJC,QADI,8BAEUL,QAAQ,CAAC,EAAD,CAFlB,yCAEXM,MAFW,eAEHC,SAFG,eAGhBN,SAAS,CAAC,UAAM,CACdF,cAAc,GAAGS,IAAjB,CAAsB,SAACC,IAAD,CAAU,CAC9BJ,QAAQ,CAACI,IAAD,CAAR,CACD,CAFD,EAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAQ,CAC3BA,EAAE,CAACC,cAAH,GACAL,SAAS,CAACI,EAAE,CAACE,MAAH,CAAUC,KAAX,CAAT,CACD,CAHD,CAIA,GAAIC,CAAAA,aAAa,CAAGX,KAAK,CAACY,MAAN,CAAa,SAACC,CAAD,CAAO,CACtC,MAAOA,CAAAA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8Bd,MAAM,CAACa,WAAP,EAA9B,CAAP,CACD,CAFmB,CAApB,CAIA,mBACE,qDACE,+CACE,2BAAK,SAAS,CAAC,MAAf,CAAsB,GAAG,CAAEjB,IAA3B,CAAiC,GAAG,CAAC,MAArC,CAA4C,KAAK,CAAC,sBAAlD,EADF,CADF,cAIE,6CACE,6CACE,6BAAO,OAAO,CAAC,QAAf,EADF,cAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,QAAxB,CAAiC,QAAQ,CAAEQ,YAA3C,EAFF,CADF,cAKE,0BAAI,SAAS,CAAC,MAAd,EACGK,aAAa,CAACM,GAAd,CAAkB,SAACC,IAAD,qBACjB,0BAAI,SAAS,CAAC,MAAd,CAAqB,GAAG,CAAEA,IAAI,CAACC,EAA/B,eACE,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAED,IAAI,CAACE,KAArC,CAA4C,GAAG,CAAEF,IAAI,CAACJ,IAAtD,CAA4D,KAAK,sBAAgBI,IAAI,CAACJ,IAArB,CAAjE,EADF,cAEE,2BAAK,SAAS,CAAC,YAAf,eACE,0BAAI,SAAS,CAAC,YAAd,EAA4BI,IAAI,CAACJ,IAAjC,CADF,cAEE,yBAAG,SAAS,CAAC,iBAAb,EAAgCI,IAAI,CAACG,MAArC,CAFF,CAFF,CADiB,EAAlB,CADH,CALF,CAJF,CADF,CAwBD,CAzCD,CA0CA,cAAetB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport getDataFromApi from './service/Api';\nimport { useState, useEffect } from 'react';\nimport logo from './images/logo.png';\nconst App = () => {\n  let [items, setItems] = useState([]);\n  let [search, setSearch] = useState('');\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setItems(data);\n    });\n  }, []);\n\n  const handleChange = (ev) => {\n    ev.preventDefault();\n    setSearch(ev.target.value);\n  };\n  let filteredItems = items.filter((i) => {\n    return i.name.toUpperCase().includes(search.toUpperCase());\n  });\n\n  return (\n    <>\n      <header>\n        <img className='logo' src={logo} alt='logo' title='Logo de Rick y Morty'></img>\n      </header>\n      <main>\n        <form>\n          <label htmlFor='search'></label>\n          <input type='text' name='search' onChange={handleChange}></input>\n        </form>\n        <ul className='list'>\n          {filteredItems.map((item) => (\n            <li className='item' key={item.id}>\n              <img className='item__img' src={item.image} alt={item.name} title={`picture of ${item.name}`}></img>\n              <div className='item__text'>\n                <h2 className='item__name'>{item.name}</h2>\n                <p className='item__attribute'>{item.specie}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}