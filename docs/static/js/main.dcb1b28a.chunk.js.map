{"version":3,"sources":["images/logo.png","images/alive.svg","images/dead.svg","images/question.svg","service/Api.js","components/Filter.js","components/CharacterCard.js","components/ErrorSearch.js","components/CharacterList.js","components/CharacterDetail.js","components/ErrorRoute.js","App.js","index.js"],"names":["module","exports","getDataFromApi","a","fetch","response","json","data","results","map","item","id","name","image","specie","species","status","origin","episodes","episode","length","Filter","props","console","log","className","onKeyDown","ev","key","preventDefault","htmlFor","type","value","search","onChange","target","handleFilter","placeholder","CharacterCard","filteredItems","to","src","alt","title","ErrorSearch","href","CharacterList","errorSearch","CharacterDetail","icon","character","alive","dead","question","ErrorRoute","App","useState","items","setItems","setSearch","useEffect","then","sort","b","toUpperCase","filter","i","includes","logo","path","render","characterId","match","params","foundCharacter","find","toString","undefined","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dcb1b28a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/alive.8bd2da67.svg\";","module.exports = __webpack_public_path__ + \"static/media/dead.2ef5ea9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.ead9d02d.svg\";","const getDataFromApi = async () => {\n  const response = await fetch('https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json');\n  const data = await response.json();\n  return data.results.map((item) => (item = { id: item.id, name: item.name, image: item.image, specie: item.species, status: item.status, origin: item.origin.name, episodes: item.episode.length }));\n};\n\nexport default getDataFromApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst Filter = (props) => {\n  console.log(props);\n  const handleChange = (ev) => {\n    ev.preventDefault();\n    let value = ev.target.value;\n    props.handleFilter(value);\n  };\n  const handleKeyDown = (ev) => {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n    }\n  };\n  return (\n    <form className='form' onKeyDown={handleKeyDown}>\n      <label htmlFor='search'></label>\n      <input className='form__input' type='text' name='search' value={props.search} onChange={handleChange} placeholder='Busca aquí un personaje'></input>\n    </form>\n  );\n};\nFilter.propTypes = { search: PropTypes.string };\nexport default Filter;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n  console.log(props);\n  return props.filteredItems.map((item) => (\n    <li className='item' key={item.id}>\n      <Link className='item__link' to={`/character/${item.id}`}>\n        <img className='item__img' src={item.image} alt={item.name} title={`picture of ${item.name}`}></img>\n        <div className='item__text'>\n          <h2 className='item__name'>{item.name}</h2>\n          <p className='item__attribute'>{item.specie}</p>\n        </div>\n      </Link>\n    </li>\n  ));\n};\n\nCharacterCard.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  status: PropTypes.string,\n};\nexport default CharacterCard;\n","import React from 'react';\n\nconst ErrorSearch = (props) => {\n  return (\n    <div className='error'>\n      <p className='error__text'>{`No hay ningún personaje que coincida con '${props.search}'`}</p>\n      <a className='error__link' href='/'>\n        {'< Volver'}\n      </a>\n    </div>\n  );\n};\n\nexport default ErrorSearch;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport ErrorSearch from './ErrorSearch';\n\nconst CharacterList = (props) => {\n  const errorSearch = props.filteredItems.length === 0 ? <ErrorSearch search={props.search} /> : '';\n\n  return (\n    <>\n      {errorSearch}\n      <ul className='list'>\n        <CharacterCard filteredItems={props.filteredItems} />\n      </ul>\n    </>\n  );\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport alive from '../images/alive.svg';\nimport dead from '../images/dead.svg';\nimport question from '../images/question.svg';\nconst CharacterDetail = (props) => {\n  let icon = '';\n  const getIcon = () => {\n    if (props.character.status === 'Alive') {\n      return (icon = alive);\n    } else if (props.character.status === 'Dead') {\n      return (icon = dead);\n    } else {\n      return (icon = question);\n    }\n  };\n  getIcon(props);\n\n  return (\n    <div className='article__box'>\n      <a className='article__link' href={`'./character/${props.character.id}'`}>\n        {'< Volver'}\n      </a>\n      <article className='article' key={props.character.id}>\n        <img className='article__img' src={props.character.image} alt={props.character.name} title={`picture of ${props.character.name}`}></img>\n        <div className='article__text'>\n          <h2 className='article__name'>{props.character.name}</h2>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Status:</span> {props.character.status} <img className='article__attribute__icon' src={icon} alt='status'></img>\n          </p>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Species:</span> {props.character.specie}\n          </p>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Origin:</span> {props.character.origin}\n          </p>\n          <p className='article__attribute'>\n            <span className='article__attribute__title'>Episodes:</span> {props.character.episodes}\n          </p>\n        </div>\n      </article>\n    </div>\n  );\n};\nCharacterDetail.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  image: PropTypes.string,\n  status: PropTypes.string,\n  specie: PropTypes.string,\n  origin: PropTypes.string,\n  episodes: PropTypes.number,\n};\nexport default CharacterDetail;\n","import React from 'react';\n\nconst ErrorRoute = (props) => {\n  return (\n    <div className='error'>\n      <p className='error__text'>{`No hay ningún personaje que coincida con la ruta /character/${props.id}`}</p>\n      <a className='error__link' href='/'>\n        {'< Volver'}\n      </a>\n    </div>\n  );\n};\n\nexport default ErrorRoute;\n","import React from 'react';\nimport getDataFromApi from './service/Api';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport logo from './images/logo.png';\nimport Filter from './components/Filter';\nimport CharacterList from './components/CharacterList';\nimport CharacterDetail from './components/CharacterDetail';\nimport ErrorRoute from './components/ErrorRoute';\n\nconst App = () => {\n  let [items, setItems] = useState([]);\n  let [search, setSearch] = useState('');\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setItems(data);\n    });\n  }, []);\n\n  const handleFilter = (value) => {\n    setSearch(value);\n  };\n  items.sort(function (a, b) {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1;\n    }\n    if (a.name.toUpperCase() < b.name.toUpperCase()) {\n      return -1;\n    }\n    return 0;\n  });\n\n  let filteredItems = items.filter((i) => {\n    return i.name.toUpperCase().includes(search.toUpperCase());\n  });\n\n  const renderCharacterDetail = (props) => {\n    const characterId = props.match.params.id;\n    const foundCharacter = items.find((i) => i.id.toString() === characterId);\n    if (foundCharacter === undefined) {\n      return <ErrorRoute id={characterId} />;\n    } else if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <img className='logo' src={logo} alt='logo' title='Logo de Rick y Morty'></img>\n      </header>\n      <main>\n        <Switch>\n          <Route path='/character/:id' render={renderCharacterDetail}></Route>\n          <Route exact path='/'>\n            <Filter handleFilter={handleFilter} search={search} />\n            <CharacterList search={search} filteredItems={filteredItems} />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}